{"metadata":{"symbolKind":"struct","externalID":"s:22ComposableArchitecture17PresentationStateV","modules":[{"name":"ComposableArchitecture"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"title":"PresentationState","roleHeading":"Structure"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/Se","doc:\/\/ComposableArchitecture\/SE","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/init(wrappedValue:)"]},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/wrappedValue"]},{"title":"Subscripts","generated":true,"anchor":"Subscripts","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:_:_:_:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-4tcjz","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-8qv25"]},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Decodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Encodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Hashable-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/presentationstate"]}],"abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@dynamicMemberLookup","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Use this property wrapper for modeling a feature’s domain that needs to present a child feature","type":"text"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, if you have a ","type":"text"},{"code":"ChildFeature","type":"codeVoice"},{"text":" reducer that encapsulates the logic and behavior for a","type":"text"},{"text":" ","type":"text"},{"text":"feature, then any feature that wants to present that feature will hold onto ","type":"text"},{"code":"ChildFeature.State","type":"codeVoice"},{"text":" ","type":"text"},{"text":"like so:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct ParentFeature {","  struct State {","    @PresentationState var child: ChildFeature.State?","     \/\/ ...","  }","  \/\/ ...","}"]},{"inlineContent":[{"type":"text","text":"For the most part your feature’s logic can deal with "},{"type":"codeVoice","code":"child"},{"type":"text","text":" as a plain optional value, but"},{"type":"text","text":" "},{"type":"text","text":"there are times you need to know that you are secretly dealing with "},{"type":"codeVoice","code":"PresentationState"},{"type":"text","text":". For"},{"type":"text","text":" "},{"type":"text","text":"example, when using the "},{"type":"codeVoice","code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"},{"type":"text","text":" reducer operator to"},{"type":"text","text":" "},{"type":"text","text":"integrate the parent and child features together, you will construct a key path to the projected"},{"type":"text","text":" "},{"type":"text","text":"value "},{"type":"codeVoice","code":"\\.$child"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct ParentFeature {","  \/\/ ...","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      \/\/ Core logic for parent feature","    }","    .ifLet(\\.$child, action: \\.child) {","      ChildFeature()","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the dedicated article on "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","isActive":true},{"type":"text","text":" for more information on the library’s navigation"},{"type":"text","text":" "},{"type":"text","text":"tools, and in particular see "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","isActive":true},{"type":"text","text":" for information on modeling navigation"},{"type":"text","text":" "},{"type":"text","text":"using optionals and enums."}]}],"kind":"content"}],"references":{"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable"},"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/projectedValue":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate\/projectedvalue","title":"projectedValue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/projectedValue","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Decodable-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/decodable-implementations","title":"Decodable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Decodable-Implementations","abstract":[],"role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Equatable-Implementations":{"title":"Equatable Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Equatable-Implementations","abstract":[],"url":"\/documentation\/composablearchitecture\/presentationstate\/equatable-implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"kind":"article","type":"topic","title":"Navigation","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"url":"\/documentation\/composablearchitecture\/presentationstate","abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"type":"topic","title":"PresentationState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:_:_:_:_:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:_:_:_:_:)","abstract":[],"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":" _: "},{"preciseIdentifier":"s:13CasePathsCore03AnyA4PathV","kind":"typeIdentifier","text":"AnyCasePath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">, "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":"?"}],"title":"subscript(case:_:_:_:_:)","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:_:_:_:_:)","type":"topic"},"doc://ComposableArchitecture/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/ComposableArchitecture\/Se","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"role":"symbol","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Presents()":{"url":"\/documentation\/composablearchitecture\/presents()","type":"topic","abstract":[{"text":"Wraps a property with ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"text":" and observes it.","type":"text"}],"title":"Presents()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Presents"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/init(wrappedValue:)":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/init(wrappedValue:)","url":"\/documentation\/composablearchitecture\/presentationstate\/init(wrappedvalue:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","kind":"symbol","title":"init(wrappedValue:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(dynamicMember:)-8qv25":{"kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(dynamicmember:)-8qv25","title":"subscript(dynamicMember:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":">"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-8qv25","abstract":[],"role":"symbol"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/ComposableArchitecture\/SQ","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/CustomReflectable-Implementations":{"type":"topic","title":"CustomReflectable Implementations","url":"\/documentation\/composablearchitecture\/presentationstate\/customreflectable-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/CustomReflectable-Implementations","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/s17CustomReflectableP":{"title":"Swift.CustomReflectable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"abstract":[],"kind":"symbol","title":"Effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Hashable-Implementations":{"kind":"article","title":"Hashable Implementations","url":"\/documentation\/composablearchitecture\/presentationstate\/hashable-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Hashable-Implementations","role":"collectionGroup","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Encodable-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Encodable-Implementations","title":"Encodable Implementations","url":"\/documentation\/composablearchitecture\/presentationstate\/encodable-implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(dynamicMember:)-4tcjz":{"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Case"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","kind":"typeIdentifier","text":"PresentationState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-4tcjz","abstract":[],"title":"subscript(dynamicMember:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(dynamicmember:)-4tcjz","role":"symbol"},"doc://ComposableArchitecture/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SE"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/wrappedValue":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"wrappedValue","url":"\/documentation\/composablearchitecture\/presentationstate\/wrappedvalue","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/wrappedValue","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","title":"Tree-based navigation","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}],"url":"\/documentation\/composablearchitecture\/treebasednavigation","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:)":{"title":"subscript(case:)","type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:)","abstract":[{"text":"Accesses the value associated with the given case for reading and writing.","type":"text"}],"fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)","role":"symbol"}}}