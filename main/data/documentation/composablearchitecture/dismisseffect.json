{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Execute this in the effect returned from a reducer in order to dismiss the feature:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct ChildFeature {","  struct State { \/* ... *\/ }","  enum Action {","    case exitButtonTapped","    \/\/ ...","  }","  @Dependency(\\.dismiss) var dismiss","  var body: some Reducer<State, Action> {","    Reduce { state, action in","      switch action {","      case .exitButtonTapped:","        return .run { _ in await self.dismiss() }","      \/\/ ...","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"This operation works by finding the nearest parent feature that was presented using either the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"},{"text":" or the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb"},{"text":" operator, and then dismisses ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"that","type":"text"}]},{"text":" ","type":"text"},{"text":"feature. It performs the dismissal by either sending the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","type":"reference","isActive":true},{"text":" in the","type":"text"},{"text":" ","type":"text"},{"text":"case of ","type":"text"},{"type":"codeVoice","code":"ifLet"},{"text":" or sending ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","type":"reference","isActive":true},{"text":" in the case of ","type":"text"},{"type":"codeVoice","code":"forEach"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"It is also possible to dismiss the feature using an animation by providing an argument to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" function:"}],"type":"paragraph"},{"code":["case .exitButtonTapped:","  return .run { _ in await self.dismiss(animation: .default) }"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"This will cause the ","type":"text"},{"code":"dismiss","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"popFrom(id:)","type":"codeVoice"},{"text":" action to be sent with the particular animation.","type":"text"}],"type":"paragraph"},{"name":"Warning","style":"warning","content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"@Dependency(\\.dismiss)","type":"codeVoice"},{"type":"text","text":" tool only works for features that are presented using"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"ifLet","type":"codeVoice"},{"type":"text","text":" operator for tree-based navigation (see "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"reference","isActive":true},{"type":"text","text":" for more info)"},{"type":"text","text":" "},{"type":"text","text":"or "},{"code":"forEach","type":"codeVoice"},{"type":"text","text":" operator for stack-based navigation (see "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","type":"reference","isActive":true},{"type":"text","text":"). If no"},{"type":"text","text":" "},{"type":"text","text":"parent feature is found that was presented with "},{"code":"ifLet","type":"codeVoice"},{"type":"text","text":" or "},{"code":"forEach","type":"codeVoice"},{"type":"text","text":", then a runtime warning"},{"type":"text","text":" "},{"type":"text","text":"is emitted in Xcode letting you know that it is not possible to dismiss. Further, the runtime"},{"type":"text","text":" "},{"type":"text","text":"warning becomes a test failure when run in tests."}],"type":"paragraph"},{"inlineContent":[{"text":"If you are testing a child feature in isolation that makes use of ","type":"text"},{"code":"@Dependency(\\.dismiss)","type":"codeVoice"},{"text":" ","type":"text"},{"text":"then you will need to override the dependency to get a passing test. You can even mutate","type":"text"},{"text":" ","type":"text"},{"text":"some shared mutable state inside the ","type":"text"},{"code":"dismiss","type":"codeVoice"},{"text":" closure to confirm that it is indeed invoked:","type":"text"}],"type":"paragraph"},{"code":["let isDismissInvoked: LockIsolated<[Bool]> = .init([])","let store = TestStore(initialState: Child.State()) {","  Child()","} withDependencies: {","  $0.dismiss = DismissEffect { isDismissInvoked.withValue { $0.append(true) } }","}","","await store.send(.exitButtonTapped) {","  \/\/ ...","}","XCTAssertEqual(isDismissInvoked.value, [true])"],"type":"codeListing","syntax":"swift"}],"type":"aside"}],"kind":"content"}],"seeAlsoSections":[{"title":"Dismissal","anchor":"Dismissal","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/dismisseffect"]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)"],"generated":true}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Structure","title":"DismissEffect","symbolKind":"struct","externalID":"s:22ComposableArchitecture13DismissEffectV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"text":" ","type":"text"},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"role":"article","type":"topic","url":"\/documentation\/composablearchitecture\/stackbasednavigation","title":"Stack-based navigation","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(transaction:fileID:filePath:line:column:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)","title":"callAsFunction(transaction:fileID:filePath:line:column:)","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"transaction","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(transaction:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(fileID:filePath:line:column:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","title":"callAsFunction(fileID:filePath:line:column:)","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","title":"Tree-based navigation","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"type":"text","text":" "},{"type":"text","text":"how to model your domains, how to integrate features, how to test your features, and more."}],"url":"\/documentation\/composablearchitecture\/treebasednavigation","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/dismiss":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dismiss"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DismissEffect","preciseIdentifier":"s:22ComposableArchitecture13DismissEffectV"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/dismiss","abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"title":"dismiss","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/isPresented":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isPresented","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isPresented","role":"symbol","abstract":[{"text":"A Boolean value that indicates whether the current feature is being presented from a parent","type":"text"},{"text":" ","type":"text"},{"text":"feature.","type":"text"}],"url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/ispresented","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"role":"symbol","abstract":[{"type":"text","text":"An action sent to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" out the associated presentation state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss","type":"topic","title":"PresentationAction.dismiss","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"dismiss"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StackElementID","preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","abstract":[{"text":"An action sent to dismiss the associated stack element at a given identifier.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"StackAction.popFrom(id:)","url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/init(_:)":{"title":"init(_:)","abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect\/init(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"role":"symbol","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"kind":"article","type":"topic","title":"Navigation","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"An effect that dismisses the current presentation.","type":"text"}],"url":"\/documentation\/composablearchitecture\/dismisseffect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","kind":"symbol","title":"DismissEffect","navigatorTitle":[{"text":"DismissEffect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"abstract":[],"kind":"symbol","title":"Effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(animation:fileID:filePath:line:column:)":{"type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(animation:fileid:filepath:line:column:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"animation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"kind":"symbol","title":"callAsFunction(animation:fileID:filePath:line:column:)"}}}