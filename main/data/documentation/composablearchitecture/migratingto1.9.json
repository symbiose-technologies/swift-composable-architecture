{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Update your code to make use of the new ","type":"text"},{"type":"codeVoice","code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x"},{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"method on ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","type":"reference","isActive":true},{"text":" which gives a succinct syntax for sending actions with case key paths, and","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","type":"reference","isActive":true},{"text":" method for overriding dependencies.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/migratingto1.9"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.19","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.18","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"],"generated":true}],"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Article","role":"article","title":"Migrating to 1.9"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"The Composable Architecture is under constant development, and we are always looking for ways to","type":"text"},{"text":" ","type":"text"},{"text":"simplify the library, and make it more powerful. As such, we often need to deprecate certain APIs","type":"text"},{"text":" ","type":"text"},{"text":"in favor of newer ones. We recommend people update their code as quickly as possible to the newest","type":"text"},{"text":" ","type":"text"},{"text":"APIs, and this article contains some tips for doing so.","type":"text"}],"type":"paragraph"},{"level":3,"text":"Sending test store actions","anchor":"Sending-test-store-actions","type":"heading"},{"inlineContent":[{"text":"Version 1.4 of the library introduced the ability to receive test store actions using case key path","type":"text"},{"text":" ","type":"text"},{"text":"syntax, massively simplifying how one asserts on actions received in a test:","type":"text"}],"type":"paragraph"},{"code":["-store.receive(.child(.presented(.response(.success(\"Hello\")))))","+store.receive(\\.child.response.success)"],"syntax":"diff","type":"codeListing"},{"inlineContent":[{"type":"text","text":"While version 1.6 of the library introduced the ability to assert against the payload of a received"},{"type":"text","text":" "},{"type":"text","text":"action:"}],"type":"paragraph"},{"code":["store.receive(\\.child.presented.success, \"Hello\")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Version 1.9 introduces similar affordances for "},{"type":"emphasis","inlineContent":[{"text":"sending","type":"text"}]},{"type":"text","text":" actions to test stores via"},{"type":"text","text":" "},{"code":"TestStore\/send(_:assert:fileID:file:line:column:)-8877x","type":"codeVoice"},{"type":"text","text":" and"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:_:assert:fileID:file:line:column:)"},{"type":"text","text":". These methods can significantly simplify"},{"type":"text","text":" "},{"type":"text","text":"integration-style tests that send deeply-nested actions to child features, and provide symmetry to"},{"type":"text","text":" "},{"type":"text","text":"how actions are received:"}],"type":"paragraph"},{"code":["-store.send(.path(.element(id: 0, action: .destination(.presented(.record(.startButtonTapped))))))","+store.send(\\.path[id: 0].destination.record.startButtonTapped)"," store.receive(\\.path[id: 0].destination.record.timerTick)"],"syntax":"diff","type":"codeListing"},{"name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"Case key paths offer specialized syntax for many different action types.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true,"type":"reference"},{"text":"â€™s ","type":"text"},{"code":"presented","type":"codeVoice"},{"text":" case can be collapsed:","type":"text"}]},{"type":"codeListing","syntax":"diff","code":["-store.send(.destination(.presented(.tap)))","+store.send(\\.destination.tap)"]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction"},{"type":"text","text":" can be subscripted into:"}],"type":"paragraph"},{"syntax":"diff","type":"codeListing","code":["-store.send(.path(.element(id: 0, action: .tap)))","+store.send(\\.path[id: 0].tap)"]}]},{"content":[{"inlineContent":[{"text":"And ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","isActive":true,"type":"reference"},{"text":"s can dynamically chain into a key path of state:","type":"text"}],"type":"paragraph"},{"code":["-store.send(.binding(.set(\\.firstName, \"Blob\")))","+store.send(\\.binding.firstName, \"Blob\")"],"type":"codeListing","syntax":"diff"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Together, these helpers can massively simplify asserting against nested actions:"}]},{"code":["-store.send(","-  .path(","-    .element(","-      id: 0,","-      action: .destination(","-        .presented(","-          .sheet(","-            .binding(","-              .set(\\.password, \"blobisawesome\")","-            )","-          )","-        )","-      )","-    )","-  )","-)","+store.send(\\.path[id: 0].destination.sheet.binding.password, \"blobisawesome\")"],"syntax":"diff","type":"codeListing"}],"style":"tip","type":"aside"},{"level":3,"text":"Overriding dependencies","anchor":"Overriding-dependencies","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Version 1.2 of "},{"type":"reference","isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies"},{"type":"text","text":" introduced an"},{"type":"text","text":" "},{"type":"text","text":"alternative syntax for referencing a dependency:"}]},{"type":"codeListing","code":["-@Dependency(\\.apiClient) var apiClient","+@Dependency(APIClient.self) var apiClient"],"syntax":"diff"},{"type":"paragraph","inlineContent":[{"text":"The primary benefit of this syntax is that you do not need to define a dedicated computed property","type":"text"},{"text":" ","type":"text"},{"text":"on ","type":"text"},{"type":"codeVoice","code":"DependencyValues"},{"text":", which saves a small amount of boilerplate.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is now a similar API for overriding dependencies on a reducer, "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"which can be used like so:"}]},{"type":"codeListing","code":["MyFeature()","  .dependency(mockAPIClient)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of "},{"type":"codeVoice","code":"mockAPIClient"},{"type":"text","text":" determines how the dependency is overridden."}]},{"type":"paragraph","inlineContent":[{"text":"This style of accessing and overriding dependencies is really only appropriate for dependencies","type":"text"},{"text":" ","type":"text"},{"text":"defined directly in your project. If you are shipping a dependency client that is used by others,","type":"text"},{"text":" ","type":"text"},{"text":"then still prefer adding a computed property to ","type":"text"},{"code":"DependencyValues","type":"codeVoice"},{"text":" in order to be more discoverable.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"kind":"article","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"title":"Migration guides","url":"\/documentation\/composablearchitecture\/migrationguides","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","type":"topic","abstract":[{"text":"Learn how to upgrade your application to the newest version of the Composable Architecture.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"StackAction","kind":"identifier"}],"kind":"symbol","title":"StackAction","url":"\/documentation\/composablearchitecture\/stackaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","title":"Migrating to 1.11","type":"topic","abstract":[{"text":"Update your code to use the new ","type":"text"},{"type":"codeVoice","code":"withLock"},{"text":" method for mutating shared state from asynchronous","type":"text"},{"text":" ","type":"text"},{"text":"contexts, rather than mutating the underlying wrapped value directly.","type":"text"}],"url":"\/documentation\/composablearchitecture\/migratingto1.11"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","title":"Migrating to 1.7","role":"article","kind":"article","abstract":[{"type":"text","text":"Update your code to make use of the new observation tools in the library and get rid of legacy"},{"type":"text","text":" "},{"type":"text","text":"APIs such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"type":"text","text":", and more."}],"url":"\/documentation\/composablearchitecture\/migratingto1.7","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"kind":"symbol","title":"Store","url":"\/documentation\/composablearchitecture\/store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"type":"text","text":" "},{"type":"text","text":"strategy, as well as beta support for Swiftâ€™s native Testing framework."}],"title":"Migrating to 1.12","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","type":"topic","kind":"article","url":"\/documentation\/composablearchitecture\/migratingto1.12","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"url":"\/documentation\/composablearchitecture\/presentationaction","title":"PresentationAction","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","kind":"symbol","abstract":[{"text":"A wrapper type for actions that can be presented.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"PresentationAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependency","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","type":"topic","title":"dependency(_:)","abstract":[{"type":"text","text":"Places a value in the reducerâ€™s dependencies."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:_:assert:fileID:file:line:column:)":{"conformance":{"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"send(_:_:assert:fileID:file:line:column:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/send(_:_:assert:fileid:file:line:column:)","role":"symbol","abstract":[{"type":"text","text":"Sends an action to the store and asserts when state changes."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","kind":"typeIdentifier","text":"CaseKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV","kind":"typeIdentifier","text":"TestStoreTask"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:_:assert:fileID:file:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic","title":"TestStore","role":"symbol","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"title":"Migrating to 1.4","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.4","abstract":[{"text":"Update your code to make use of the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"text":" macro, and learn how to better leverage case key","type":"text"},{"text":" ","type":"text"},{"text":"paths in your features.","type":"text"}],"kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.13":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.13","abstract":[{"type":"text","text":"The Composable Architecture now provides first class tools for building features in UIKit,"},{"type":"text","text":" "},{"type":"text","text":"including minimal state observation, presentation and stack navigation."}],"title":"Migrating to 1.13","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17.1":{"title":"Migrating to 1.17.1","kind":"article","abstract":[{"type":"text","text":"The Sharing library has graduated, with backwards-incompatible changes, to 2.0, and the Composable"},{"type":"text","text":" "},{"type":"text","text":"Architecture has been updated to extend support to this new version."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17.1","url":"\/documentation\/composablearchitecture\/migratingto1.17.1","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"url":"\/documentation\/composablearchitecture\/migratingto1.6","role":"article","title":"Migrating to 1.6","abstract":[{"type":"text","text":"Update your code to make use of the new"},{"type":"text","text":" "},{"type":"codeVoice","code":"TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"type":"text","text":"assert on the payload inside an action received."}],"type":"topic","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6"},"http://github.com/pointfreeco/swift-dependencies":{"titleInlineContent":[{"text":"swift-dependencies","type":"text"}],"type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-dependencies","identifier":"http:\/\/github.com\/pointfreeco\/swift-dependencies","title":"swift-dependencies"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"abstract":[{"type":"text","text":"Update your code to make use of the new state sharing tools in the library, such as the "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":" "},{"type":"text","text":"property wrapper, and the "},{"type":"codeVoice","code":"appStorage"},{"type":"text","text":" and "},{"type":"codeVoice","code":"fileStorage"},{"type":"text","text":" persistence strategies."}],"role":"article","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.10","title":"Migrating to 1.10"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"abstract":[{"type":"text","text":"The "},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" property wrapper and related tools have been extracted to their own"},{"type":"text","text":" "},{"type":"text","text":"library so that they can be used in non-Composable Architecture applications. This a"},{"type":"text","text":" "},{"type":"text","text":"backwards compatible change, but some new deprecations have been introduced."}],"type":"topic","kind":"article","title":"Migrating to 1.17","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","url":"\/documentation\/composablearchitecture\/migratingto1.17","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","role":"symbol","url":"\/documentation\/composablearchitecture\/foreachstore","kind":"symbol","abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"type":"codeVoice","code":"ForEach"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"text":"collections of state.","type":"text"}],"type":"topic","title":"ForEachStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"title":"Migrating to 1.16","url":"\/documentation\/composablearchitecture\/migratingto1.16","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":".appStorage"},{"type":"text","text":" strategy used with "},{"type":"codeVoice","code":"@Shared"},{"type":"text","text":" now uses key-value observing instead of"},{"type":"text","text":" "},{"type":"codeVoice","code":"NotificationCenter"},{"type":"text","text":" when possible. Learn how this may affect your code."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"title":"BindingAction","role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/bindingaction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"topic","abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingAction","kind":"identifier"}],"navigatorTitle":[{"text":"BindingAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.18":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.18","abstract":[{"text":"Stores now automatically cancel their in-flight effects when they deallocate. And another UIKit","type":"text"},{"text":" ","type":"text"},{"text":"navigation helper has been introduced.","type":"text"}],"title":"Migrating to 1.18","url":"\/documentation\/composablearchitecture\/migratingto1.18","type":"topic","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"abstract":[{"text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict","type":"text"},{"text":" ","type":"text"},{"text":"concurrency with no warnings or errors.","type":"text"}],"role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","title":"Migrating to 1.15","url":"\/documentation\/composablearchitecture\/migratingto1.15","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"title":"WithViewStore","role":"symbol","deprecated":true,"kind":"symbol","navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","abstract":[{"text":"A view helper that transforms a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","isActive":true,"type":"reference"},{"text":" into a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"text":" so that its state can be observed","type":"text"},{"text":" ","type":"text"},{"text":"by a view builder.","type":"text"}],"url":"\/documentation\/composablearchitecture\/withviewstore","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WithViewStore","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.5":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.5","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","title":"Migrating to 1.5","kind":"article","role":"article","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"code":"Store\/scope(state:action:)-90255","type":"codeVoice"},{"type":"text","text":" operation on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":" "},{"type":"text","text":"in order to improve the performance of your features and simplify the usage of navigation APIs."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"abstract":[{"text":"A wrapper type for actions that can be presented in a list.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"IdentifiedAction","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/identifiedaction","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IdentifiedAction","kind":"identifier"}],"type":"topic","title":"IdentifiedAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.19":{"type":"topic","url":"\/documentation\/composablearchitecture\/migratingto1.19","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.19","title":"Migrating to 1.19","kind":"article","role":"article","abstract":[{"type":"text","text":"Store internals have been rewritten for performance and future features, and are now compatible with"},{"type":"text","text":" "},{"type":"text","text":"SwiftUIâ€™s "},{"code":"@StateObject","type":"codeVoice"},{"type":"text","text":" property wrapper."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"abstract":[{"type":"text","text":"Helps implement the conformance to the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true},{"type":"text","text":" protocol for a type."}],"kind":"symbol","role":"symbol","title":"Reducer()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/reducer()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"title":"Migrating to 1.8","abstract":[{"text":"Update your code to make use of the new capabilities of the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","type":"reference"},{"text":" macro, including automatic","type":"text"},{"text":" ","type":"text"},{"text":"fulfillment of requirements for destination reducers and path reducers.","type":"text"}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","url":"\/documentation\/composablearchitecture\/migratingto1.8","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","role":"symbol","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"type":"topic","deprecated":true,"title":"IfLetStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"type":"topic","abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference","isActive":true},{"type":"text","text":" type is now officially "},{"type":"codeVoice","code":"@MainActor"},{"type":"text","text":" isolated."}],"kind":"article","title":"Migrating to 1.14","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","url":"\/documentation\/composablearchitecture\/migratingto1.14"}}}