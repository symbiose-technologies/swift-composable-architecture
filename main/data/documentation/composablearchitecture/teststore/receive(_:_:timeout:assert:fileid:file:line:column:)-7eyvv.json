{"abstract":[{"text":"Asserts an action was received matching a case path with a specific payload, and asserts how","type":"text"},{"text":" ","type":"text"},{"text":"the state changes.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/teststore\/receive(_:_:timeout:assert:fileid:file:line:column:)-7eyvv"]}],"metadata":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture9TestStoreC7receive__7timeout6assert6fileID0H04line6columnys7KeyPathCy13CasePathsCore0N0Vyq_GAOyqd__GG_qd__s6UInt64VSgyxzKcSgs12StaticStringVAXS2utYaAM0N8PathableR_SQRd__lF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":"?, ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"role":"symbol","title":"receive(_:_:timeout:assert:fileID:file:line:column:)","extendedModule":"ComposableArchitecture"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"actionCase","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"nanoseconds","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":"? = nil, ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"updateStateToExpectedResult","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")? = nil, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"filePath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#filePath","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"text":"#column","kind":"keyword"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"CasePathable","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A8PathableP"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"}]}],"kind":"declarations"},{"parameters":[{"name":"actionCase","content":[{"inlineContent":[{"text":"A case path identifying the case of an action to enum to receive","type":"text"}],"type":"paragraph"}]},{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value to match in the action."}],"type":"paragraph"}]},{"name":"nanoseconds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The amount of time to wait for the expected action."}]}]},{"name":"updateStateToExpectedResult","content":[{"inlineContent":[{"type":"text","text":"A closure that asserts state changed by sending the action"},{"type":"text","text":" "},{"type":"text","text":"to the store. The mutable state sent to this closure must be modified to match the state"},{"type":"text","text":" "},{"type":"text","text":"of the store after processing the given action. Do not provide a closure if no change is"},{"type":"text","text":" "},{"type":"text","text":"expected."}],"type":"paragraph"}]},{"name":"fileID","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The fileID."}]}]},{"name":"filePath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The filePath."}]}]},{"name":"line","content":[{"inlineContent":[{"text":"The line.","type":"text"}],"type":"paragraph"}]},{"name":"column","content":[{"inlineContent":[{"type":"text","text":"The column."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"receive(_:timeout:assert:fileID:file:line:column:)-53wic"},{"type":"text","text":", except"},{"type":"text","text":" "},{"type":"text","text":"it allows you to assert on the value inside the action too."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It can be useful when asserting on delegate actions sent by a child feature:"}]},{"type":"codeListing","code":["await store.receive(\\.delegate.success, \"Hello!\")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the storeâ€™s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity"},{"type":"text","text":" is set to anything other than "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off"},{"type":"text","text":", a grey"},{"type":"text","text":" "},{"type":"text","text":"information box will show next to the "},{"code":"store.receive","type":"codeVoice"},{"type":"text","text":" line in Xcode letting you know what data"},{"type":"text","text":" "},{"type":"text","text":"was in the effect that you chose not to assert on."}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-7eyvv","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"type":"topic","title":"TestStore","role":"symbol","abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/off":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"off"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity"}],"title":"off","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off","url":"\/documentation\/composablearchitecture\/exhaustivity\/off","abstract":[{"type":"text","text":"Non-exhaustive assertions."}],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"role":"symbol","kind":"symbol","title":"exhaustivity","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"exhaustivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Exhaustivity","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:_:timeout:assert:fileID:file:line:column:)-7eyvv":{"conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-7eyvv","url":"\/documentation\/composablearchitecture\/teststore\/receive(_:_:timeout:assert:fileid:file:line:column:)-7eyvv","kind":"symbol","abstract":[{"type":"text","text":"Asserts an action was received matching a case path with a specific payload, and asserts how"},{"type":"text","text":" "},{"type":"text","text":"the state changes."}],"title":"receive(_:_:timeout:assert:fileID:file:line:column:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"assert","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}]}}}