{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": [any ","kind":"text"},{"preciseIdentifier":"s:6Charts16ChartSymbolShapeP","text":"ChartSymbolShape","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:6Charts11ScaleDomainP","text":"ScaleDomain","kind":"typeIdentifier"},{"text":"\n","kind":"text"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(domain:range:)-g575"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"metadata":{"extendedModule":"SwiftUICore","symbolKind":"method","platforms":[{"name":"iOS","unavailable":false,"introducedAt":"16.0","beta":false,"deprecated":false},{"name":"macOS","unavailable":false,"introducedAt":"13.0","beta":false,"deprecated":false},{"name":"tvOS","unavailable":false,"introducedAt":"16.0","beta":false,"deprecated":false},{"name":"watchOS","unavailable":false,"introducedAt":"9.0","beta":false,"deprecated":false}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewP6ChartsE16chartSymbolScale6domain5rangeQrqd___SayAD05ChartF5Shape_pGtAD0G6DomainRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","title":"chartSymbolScale(domain:range:)","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": [any ","kind":"text"},{"text":"ChartSymbolShape","kind":"typeIdentifier","preciseIdentifier":"s:6Charts16ChartSymbolShapeP"},{"text":"]) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.chartSymbolScale(domain:range:)"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(domain:range:)-g575","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","role":"symbol","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"type":"topic","deprecated":true,"title":"IfLetStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","title":"View Implementations","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","type":"topic","title":"Deprecations","kind":"article","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartSymbolScale(domain:range:)-g575":{"abstract":[],"url":"\/documentation\/composablearchitecture\/ifletstore\/chartsymbolscale(domain:range:)-g575","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartSymbolScale(domain:range:)-g575","role":"symbol","title":"chartSymbolScale(domain:range:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartSymbolScale","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Domain","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"domain","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Domain","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": [any ","kind":"text"},{"text":"ChartSymbolShape","preciseIdentifier":"s:6Charts16ChartSymbolShapeP","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"kind":"symbol"}}}