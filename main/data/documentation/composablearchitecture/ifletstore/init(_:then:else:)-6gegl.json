{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"]]},"metadata":{"title":"init(_:then:else:)","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":[],"modules":[{"name":"ComposableArchitecture"}],"role":"symbol","roleHeading":"Initializer","externalID":"s:22ComposableArchitecture10IfLetStoreV_4then4elseACyxq_7SwiftUI19_ConditionalContentVyqd__qd_0_GGAA0E0CyxSgq_G_qd__ALyxq_Gcqd_0_yXEtcAIRs0_AF4ViewRd__AfPRd_0_r0_lufc"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Initializes an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","type":"reference"},{"text":" view that computes content depending on if a store of optional","type":"text"},{"text":" ","type":"text"},{"text":"state is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" or non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"store","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Store","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"text":"then","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"ifContent","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Store","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"text":"else","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"elseContent","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"ElseContent","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"_ConditionalContent"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElseContent"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElseContent"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"store","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A store of optional state."}]}]},{"name":"ifContent","content":[{"type":"paragraph","inlineContent":[{"text":"A function that is given a store of non-optional state and returns a view that","type":"text"},{"text":" ","type":"text"},{"text":"is visible only when the optional state is non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]},{"name":"elseContent","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A view that is only visible when the optional state is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}]}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'if let' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-IfLetStore-with-if-let]"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl"]}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","role":"symbol","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}],"type":"topic","deprecated":true,"title":"IfLetStore","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","title":"SwiftUI Integration","abstract":[{"text":"Integrating the Composable Architecture into a SwiftUI application.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","type":"topic","title":"Deprecations","kind":"article","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"kind":"symbol","title":"Store","url":"\/documentation\/composablearchitecture\/store","abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:then:else:)-6gegl":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"IfContent"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ElseContent"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":", "},{"kind":"externalParam","text":"else"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"ElseContent"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of optional"},{"type":"text","text":" "},{"type":"text","text":"state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl","title":"init(_:then:else:)","deprecated":true,"role":"symbol"}}}