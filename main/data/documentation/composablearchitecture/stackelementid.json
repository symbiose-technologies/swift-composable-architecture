{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID"},"abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"type":"text","text":"."}],"metadata":{"roleHeading":"Structure","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"struct","externalID":"s:22ComposableArchitecture14StackElementIDV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"navigatorTitle":[{"kind":"identifier","text":"StackElementID"}],"title":"StackElementID","role":"symbol"},"seeAlsoSections":[{"title":"Stack-based navigation","anchor":"Stack-based-navigation","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf"],"generated":true}],"variants":[{"paths":["\/documentation\/composablearchitecture\/stackelementid"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"sections":[],"topicSections":[{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":" type creates instances of this identifier when new elements are added to"},{"type":"text","text":" "},{"type":"text","text":"the stack. This makes it possible to easily look up specific elements in the stack without"},{"type":"text","text":" "},{"type":"text","text":"resorting to positional indices, which can be error prone, especially when dealing with async"},{"type":"text","text":" "},{"type":"text","text":"effects."}]},{"type":"paragraph","inlineContent":[{"text":"The identifier is backed by a deterministic, generational ID. This allows you to predict how","type":"text"},{"text":" ","type":"text"},{"text":"IDs will be created and allows you to write tests for how features behave in the stack.","type":"text"}]},{"code":["@Test","func basics() {","  var path = StackState<Int>()","  path.append(42)","  XCTAssertEqual(path[id: 0], 42)","  path.append(1729)","  XCTAssertEqual(path[id: 1], 1729)","","  path.removeAll()","  path.append(-1)","  XCTAssertEqual(path[id: 2], -1)","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Notice that after removing all elements and appending a new element, the ID generated was 2 and"},{"type":"text","text":" "},{"type":"text","text":"did not go back to 0. This is because in tests the IDs are "},{"type":"emphasis","inlineContent":[{"type":"text","text":"generational"}]},{"type":"text","text":", which means they"},{"type":"text","text":" "},{"type":"text","text":"keep counting up, even if you remove elements from the stack."}]}]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackActionOf","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","navigatorTitle":[{"text":"StackActionOf","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/stackactionof","kind":"symbol","type":"topic","abstract":[{"text":"A convenience type alias for referring to a stack action of a given reducerâ€™s domain.","type":"text"}],"title":"StackActionOf"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"url":"\/documentation\/composablearchitecture\/effect","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Effect","kind":"identifier"}],"abstract":[],"kind":"symbol","title":"Effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"role":"symbol","title":"Reducer","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"text":" ","type":"text"},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"text":"s should be executed later by the store, if any.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"text":" ","type":"text"},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}],"kind":"article","type":"topic","title":"Navigation","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDebugStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/composablearchitecture\/stackelementid\/customdebugstringconvertible-implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/ExpressibleByIntegerLiteral-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/composablearchitecture\/stackelementid\/expressiblebyintegerliteral-implementations","kind":"article","title":"ExpressibleByIntegerLiteral Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"text":" ","type":"text"},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"role":"article","type":"topic","url":"\/documentation\/composablearchitecture\/stackbasednavigation","title":"Stack-based navigation","kind":"article"},"doc://ComposableArchitecture/s27ExpressibleByIntegerLiteralP":{"identifier":"doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","type":"unresolvable","title":"Swift.ExpressibleByIntegerLiteral"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDumpStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDumpStringConvertible Implementations","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/stackelementid\/customdumpstringconvertible-implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackAction","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a navigation stack."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"StackAction","kind":"identifier"}],"kind":"symbol","title":"StackAction","url":"\/documentation\/composablearchitecture\/stackaction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"navigatorTitle":[{"kind":"identifier","text":"StackElementID"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","url":"\/documentation\/composablearchitecture\/stackelementid","abstract":[{"text":"An opaque type that identifies an element of ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"text":".","type":"text"}],"title":"StackElementID","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","url":"\/documentation\/composablearchitecture","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","title":"ComposableArchitecture"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/stackstate","type":"topic","abstract":[{"text":"A list of data representing the content of a navigation stack.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","title":"StackState","navigatorTitle":[{"text":"StackState","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/Equatable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","type":"topic","kind":"article","title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/stackelementid\/equatable-implementations","abstract":[]},"doc://ComposableArchitecture/10CustomDump0aB17StringConvertibleP":{"type":"unresolvable","title":"CustomDump.CustomDumpStringConvertible","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP"},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","type":"unresolvable","title":"Swift.Equatable"}}}